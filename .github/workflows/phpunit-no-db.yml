# This workflow is for packages without database testing.
name: PHPUnit

on:
  pull_request:
    branches:
      - develop
    paths:
      - '**.php'
      - 'composer.*'
      - 'phpunit*'
      - '.github/workflows/phpunit-no-db.yml'
  push:
    branches:
      - develop
    paths:
      - '**.php'
      - 'composer.*'
      - 'phpunit*'
      - '.github/workflows/phpunit-no-db.yml'
  workflow_call:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  main:
    name: PHP ${{ matrix.php-versions }} Unit Tests
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    strategy:
      matrix:
        php-versions: ['7.4', '8.0', '8.1', '8.2']
        dependencies: ['highest', 'lowest']

    steps:
      - name: Check disk space
        run: df -h

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: composer, phive, phpunit
          extensions: intl, json, mbstring, gd, xdebug, xml, sqlite3
          coverage: xdebug
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get composer cache directory
        run: echo "COMPOSER_CACHE_FILES_DIR=$(composer config cache-files-dir)" >> $GITHUB_ENV

      - name: Cache composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ env.COMPOSER_CACHE_FILES_DIR }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install dependencies
        run: |
          if [ -f composer.lock ]; then
            composer install ${{ env.COMPOSER_UPDATE_FLAGS }} --no-progress --no-interaction --prefer-dist --optimize-autoloader
          else
            composer update ${{ env.COMPOSER_UPDATE_FLAGS }} --no-progress --no-interaction --prefer-dist --optimize-autoloader
          fi
        env:
          COMPOSER_UPDATE_FLAGS: ${{ matrix.dependencies == 'lowest' && '--prefer-lowest' || '' }}

      - name: Test with PHPUnit
        run: vendor/bin/phpunit --verbose --coverage-text --testsuite main
        env:
          TERM: xterm-256color
          TACHYCARDIA_MONITOR_GA: enabled

      - if: matrix.php-versions == '8.1'
        name: Run Coveralls
        continue-on-error: true
        run: |
          sudo phive --no-progress install --global --trust-gpg-keys E82B2FB314E9906E php-coveralls
          php-coveralls --verbose --coverage_clover=build/phpunit/clover.xml --json_path build/phpunit/coveralls-upload.json
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: PHP ${{ matrix.php-versions }}

  coveralls:
    needs: [main]
    name: Coveralls Finished
    runs-on: ubuntu-latest
    steps:
      - name: Upload Coveralls results
        uses: coverallsapp/github-action@master
        continue-on-error: true
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
